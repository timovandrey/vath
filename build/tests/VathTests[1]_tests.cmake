add_test([=[PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsDifferent_ReturnsFalse]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsDifferent_ReturnsFalse]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsDifferent_ReturnsFalse]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_CoefficientList2Terms_CoefficientsAreProvided_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_CoefficientList2Terms_CoefficientsAreProvided_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_CoefficientList2Terms_CoefficientsAreProvided_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_Terms2CoefficientList_TermsAreProvided_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_Terms2CoefficientList_TermsAreProvided_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_Terms2CoefficientList_TermsAreProvided_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_PolynomialIsProvided_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_PolynomialIsProvided_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_PolynomialIsProvided_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_TermsAreProvided_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_TermsAreProvided_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_TermsAreProvided_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_InterpolateTerms_TermsAreProvided_ReturnsCorrectInterpolatedTerms]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_InterpolateTerms_TermsAreProvided_ReturnsCorrectInterpolatedTerms]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_InterpolateTerms_TermsAreProvided_ReturnsCorrectInterpolatedTerms]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_CombineTerms_TermsAreProvided_ReturnsCorrectCombinationOfTerms]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_CombineTerms_TermsAreProvided_ReturnsCorrectCombinationOfTerms]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_CombineTerms_TermsAreProvided_ReturnsCorrectCombinationOfTerms]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsTheSame_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsTheSame_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsTheSame_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_Differentiate_PolynomialIsDifferentiated_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_Differentiate_PolynomialIsDifferentiated_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_Differentiate_PolynomialIsDifferentiated_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_DifferentiateStatic_PolynomialIsDifferentiated_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_DifferentiateStatic_PolynomialIsDifferentiated_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_DifferentiateStatic_PolynomialIsDifferentiated_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_Integrate_PolynomialIsIntegrated_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_Integrate_PolynomialIsIntegrated_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_Integrate_PolynomialIsIntegrated_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Method_IntegrateStatic_PolynomialIsIntegrated_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Method_IntegrateStatic_PolynomialIsIntegrated_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Method_IntegrateStatic_PolynomialIsIntegrated_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Constructor_DefaultConstructorIsInvoked_DefaultConstructorWorks]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Constructor_DefaultConstructorIsInvoked_DefaultConstructorWorks]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Constructor_DefaultConstructorIsInvoked_DefaultConstructorWorks]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Constructor_ConstructorTakesCoefficientList_ConstructorWorks]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Constructor_ConstructorTakesCoefficientList_ConstructorWorks]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Constructor_ConstructorTakesCoefficientList_ConstructorWorks]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.Constructor_ConstructorTakesMonomialList_ConstructorWorks]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.Constructor_ConstructorTakesMonomialList_ConstructorWorks]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.Constructor_ConstructorTakesMonomialList_ConstructorWorks]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PolynomialTests.CopyConstructor_ConstructorIsInvoked_ConstructorWorks]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=PolynomialTests.CopyConstructor_ConstructorIsInvoked_ConstructorWorks]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PolynomialTests.CopyConstructor_ConstructorIsInvoked_ConstructorWorks]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_IsEqual_MonomialValuesAreTheSame_ReturnsTrue]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_IsEqual_MonomialValuesAreTheSame_ReturnsTrue]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_IsEqual_MonomialValuesAreTheSame_ReturnsTrue]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_IsEqual_MonomialValuesAreNotTheSame_ReturnsFalse]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_IsEqual_MonomialValuesAreNotTheSame_ReturnsFalse]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_IsEqual_MonomialValuesAreNotTheSame_ReturnsFalse]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_IsEqual_TermCoefficientIsDifferent_ReturnsFalse]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_IsEqual_TermCoefficientIsDifferent_ReturnsFalse]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_IsEqual_TermCoefficientIsDifferent_ReturnsFalse]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_IsEqual_TermExponentIsDifferent_ReturnsFalse]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_IsEqual_TermExponentIsDifferent_ReturnsFalse]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_IsEqual_TermExponentIsDifferent_ReturnsFalse]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.CopyConstructor_TermIsProvided_TermIsTheSame]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.CopyConstructor_TermIsProvided_TermIsTheSame]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.CopyConstructor_TermIsProvided_TermIsTheSame]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Operator_SingleMultiplication_ResultIsCorrect]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Operator_SingleMultiplication_ResultIsCorrect]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Operator_SingleMultiplication_ResultIsCorrect]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Operator_SingleDivision_ResultIsCorrect]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Operator_SingleDivision_ResultIsCorrect]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Operator_SingleDivision_ResultIsCorrect]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_Integrate_TermIsIntegrated_ResultIsCorrect]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_Integrate_TermIsIntegrated_ResultIsCorrect]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_Integrate_TermIsIntegrated_ResultIsCorrect]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_IntegrateStatic_TermIsIntegrated_ResultIsCorrect]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_IntegrateStatic_TermIsIntegrated_ResultIsCorrect]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_IntegrateStatic_TermIsIntegrated_ResultIsCorrect]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_Differentiate_TermIsDifferentiated_ResultIsCorrect]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_Differentiate_TermIsDifferentiated_ResultIsCorrect]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_Differentiate_TermIsDifferentiated_ResultIsCorrect]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[MonomialTests.Method_DifferentiateStatic_TermIsDifferentiated_ResultIsCorrect]=]  C:/Projekte/vath/build/tests/VathTests.exe [==[--gtest_filter=MonomialTests.Method_DifferentiateStatic_TermIsDifferentiated_ResultIsCorrect]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[MonomialTests.Method_DifferentiateStatic_TermIsDifferentiated_ResultIsCorrect]=]  PROPERTIES WORKING_DIRECTORY C:/Projekte/vath/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  VathTests_TESTS PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsDifferent_ReturnsFalse PolynomialTests.Method_CoefficientList2Terms_CoefficientsAreProvided_ReturnsTrue PolynomialTests.Method_Terms2CoefficientList_TermsAreProvided_ReturnsTrue PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_PolynomialIsProvided_ReturnsTrue PolynomialTests.Method_GetHighestOrderOfPolynomialTerms_TermsAreProvided_ReturnsTrue PolynomialTests.Method_InterpolateTerms_TermsAreProvided_ReturnsCorrectInterpolatedTerms PolynomialTests.Method_CombineTerms_TermsAreProvided_ReturnsCorrectCombinationOfTerms PolynomialTests.Method_IsEqual_OrderOrNumberOfTermsIsTheSame_ReturnsTrue PolynomialTests.Method_Differentiate_PolynomialIsDifferentiated_ReturnsTrue PolynomialTests.Method_DifferentiateStatic_PolynomialIsDifferentiated_ReturnsTrue PolynomialTests.Method_Integrate_PolynomialIsIntegrated_ReturnsTrue PolynomialTests.Method_IntegrateStatic_PolynomialIsIntegrated_ReturnsTrue PolynomialTests.Constructor_DefaultConstructorIsInvoked_DefaultConstructorWorks PolynomialTests.Constructor_ConstructorTakesCoefficientList_ConstructorWorks PolynomialTests.Constructor_ConstructorTakesMonomialList_ConstructorWorks PolynomialTests.CopyConstructor_ConstructorIsInvoked_ConstructorWorks MonomialTests.Method_IsEqual_MonomialValuesAreTheSame_ReturnsTrue MonomialTests.Method_IsEqual_MonomialValuesAreNotTheSame_ReturnsFalse MonomialTests.Method_IsEqual_TermCoefficientIsDifferent_ReturnsFalse MonomialTests.Method_IsEqual_TermExponentIsDifferent_ReturnsFalse MonomialTests.CopyConstructor_TermIsProvided_TermIsTheSame MonomialTests.Operator_SingleMultiplication_ResultIsCorrect MonomialTests.Operator_SingleDivision_ResultIsCorrect MonomialTests.Method_Integrate_TermIsIntegrated_ResultIsCorrect MonomialTests.Method_IntegrateStatic_TermIsIntegrated_ResultIsCorrect MonomialTests.Method_Differentiate_TermIsDifferentiated_ResultIsCorrect MonomialTests.Method_DifferentiateStatic_TermIsDifferentiated_ResultIsCorrect)
